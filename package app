Package app 的工作本质是：
    将前端资源（h5,js,css,...）通过压缩包zip的形式打包发布。客户端在使用过程中异步下载安装更新压缩包。从而实现提升资源访问加载中性能问题。
具体工作过程如下：
1、windVane容器在客户端，这里可以简单理解为windvane分为packageApp（资源更新）和request（请求资源）。
  用户在使用APP时，发生资源请求，如请求某个JS文件。此时，会对资源URL进行拦截识别，如符合packageApp的规范则从本地读取文件，否则去CDN获取。
  去CDN获取和普通请求无异。
  从本地读取的文件时如发生本地文件中不存在，则依然会去CDN读取文件。如存在，则完成文件读取（这将大大节约了请求和加载时间）。
2、本地文件的更新：
  packageApp会校验当前资源的配置信息。如果信息不是最新的，则会更新zip资源（下载---校验---解压---安装）。
  资源的配置信息则是定时去CDN拉取。
3、发布：
  资源压缩打包发布到CDN，同时配置好资源信息。这些资源和信息在CDN上等待packageAPP的定时读取。
